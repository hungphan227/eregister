[{"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/index.js":"1","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/App.js":"2","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/store/Store.js":"3","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/Login.js":"4","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/CourseRegistration.js":"5","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/Header.js":"6","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/InformationCard/index.js":"7","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/InformationCard/InformationCard.js":"8","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Button/Button.js":"9","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Button/index.js":"10","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/Popup.js":"11","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Notification/Notification.js":"12","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/WebSockerHandler.js":"13","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/routes/Routes.js":"14","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/constants/Constants.js":"15","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/InternalEventBus.js":"16","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/service/Service.js":"17"},{"size":182,"mtime":1610177515603,"results":"18","hashOfConfig":"19"},{"size":416,"mtime":1632389966676,"results":"20","hashOfConfig":"19"},{"size":0,"mtime":1630492146969,"results":"21","hashOfConfig":"22"},{"size":2914,"mtime":1632389966679,"results":"23","hashOfConfig":"19"},{"size":4922,"mtime":1632389966679,"results":"24","hashOfConfig":"19"},{"size":757,"mtime":1632389966679,"results":"25","hashOfConfig":"19"},{"size":78,"mtime":1632389966678,"results":"26","hashOfConfig":"19"},{"size":1433,"mtime":1632389966677,"results":"27","hashOfConfig":"19"},{"size":285,"mtime":1632389966677,"results":"28","hashOfConfig":"19"},{"size":51,"mtime":1632389966677,"results":"29","hashOfConfig":"19"},{"size":2110,"mtime":1632389966679,"results":"30","hashOfConfig":"19"},{"size":1165,"mtime":1632389966678,"results":"31","hashOfConfig":"19"},{"size":2093,"mtime":1632757145437,"results":"32","hashOfConfig":"19"},{"size":825,"mtime":1632389966679,"results":"33","hashOfConfig":"19"},{"size":268,"mtime":1632389966679,"results":"34","hashOfConfig":"19"},{"size":347,"mtime":1632389966676,"results":"35","hashOfConfig":"19"},{"size":2683,"mtime":1632389966679,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"xim468",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"rsnv40",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/index.js",[],["75","76"],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/App.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/store/Store.js",[],["77","78"],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/Login.js",["79","80"],"import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport {Form} from 'react-bootstrap'\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport service from '../service/Service'\nimport { history } from '../routes/Routes'\nimport { SCREEN_NAMES } from '../constants/Constants'\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showLoginError: false,\n            username: '',\n            password: ''\n        }\n    }\n\n    componentDidMount() {\n        service.checkAuthentication();\n    }\n\n    handleClickLogin = () => {\n        service.login(this.state.username, this.state.password, () => {\n            history.push(SCREEN_NAMES.SCREEN_COURSE_REGISTRATION)\n        }, () => {\n            this.setState({\n                showLoginError: true\n            })\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ width: '500px', margin: 'auto', marginTop: '300px' }}>\n                <Card>\n                    <Card.Body>\n                        <Form>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>Username</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={(event) => {this.state.username = event.target.value}}/>\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Enter password\" onChange={(event) => {this.state.password = event.target.value}}/>\n                            </Form.Group>\n\n                            <Button variant=\"secondary\" onClick={this.handleClickLogin}>\n                                Login\n                            </Button>\n                        </Form>\n                    </Card.Body>\n                </Card>\n                {this.state.showLoginError?<i style={{color:'red'}}>Wrong username or password</i>:''}\n            </div>\n        )\n    }\n\n    // submit = () => {\n    //     return fetch(\"/login\", {\n    //         method: 'POST',\n    //         headers: {\n    //             \"Content-Type\": \"application/x-www-form-urlencoded\",\n    //         },\n    //         mode: 'no-cors',\n    //         body: 'username=' + this.state.username + '&password=' + this.state.password\n    //     }).then(res => {\n    //         console.log(res)\n    //         if (res.status === 200) {\n    //             this.props.history.push('/course-registration')\n    //         } else {\n    //             this.setState({\n    //                 showLoginError: true\n    //             })\n    //         }\n    //     }).catch(error => {\n    //         console.log(error)\n    //     })\n    // }\n}\n\nexport default Login","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/CourseRegistration.js",["81"],"import React from 'react'\nimport Header from './Header'\nimport InformationCard from '../components/InformationCard'\nimport Notification from '../components/Notification/Notification'\nimport computerScience from '../assets/images/computer-science.png'\nimport Popup from './Popup'\nimport service from '../service/Service'\nimport internalEventBus from '../InternalEventBus'\nimport { INTERNAL_EVENTS } from '../constants/Constants'\n\nclass CourseRegistration extends React.Component {\n\n    getCourseEventHandler\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            courses: [],\n            showPopup: false,\n            popupContent: ''\n        }\n    }\n\n    componentDidMount() {\n        this.getCourseEventHandler = (event) => {\n            console.log(\"react event \" + INTERNAL_EVENTS.GET_COURSE)\n            let message = event.detail\n            let courseId = message\n            service.getCourse(courseId, (data) => {\n                // TODO - Optimize rerender\n                let course = data\n                let courses = [...this.state.courses]\n                let index = courses.findIndex(c => c.courseNumber === course.courseNumber)\n                courses[index] = course\n                this.setState({courses: courses});\n            })\n        }\n        internalEventBus.on(INTERNAL_EVENTS.GET_COURSE, this.getCourseEventHandler)\n\n        service.getCourses((data) => {\n            this.setState({courses: data})\n        })\n    }\n\n    componentWillUnmount() {\n        internalEventBus.remove(INTERNAL_EVENTS.GET_COURSE, this.getCourseEventHandler)\n    }\n\n    handleClickBook(course) {\n        course.handleClickButton = () => {\n            service.joinCourse(course.id, (data) => {\n                Notification.show(data.message, 'success')\n            }, (data) => {\n                Notification.show(data.message, 'error')\n            })\n        }\n\n        Popup.show(course)\n    }\n\n    render() {\n        return (\n            <div>\n                <Header></Header>\n                <div className='eregister-body'>\n                    {this.renderInformationCards()}\n                </div>\n            </div>\n        )\n    }\n\n    renderInformationCards() {\n        return(\n            <div>\n                {\n                    this.state.courses.map((course, idx) => {\n                        return(\n                            <InformationCard data={course} handleClickButton={()=>this.handleClickBook(course)} key={idx} />\n                        )\n                    })\n                }\n            </div>\n        )\n    }\n\n    // getCourses = () => {\n    //     fetch(\"/courses\", {\n    //         method: 'GET'\n    //     }).then(res => {\n    //         console.log(res)\n    //         if (res.status === 200) {\n    //             res.json().then(data => {\n    //                 this.setState({courses: data})\n    //             })\n    //             return\n    //         }\n    //         if (res.status === 401) {\n    //             this.props.history.push('/login')\n    //             return\n    //         }\n    //         this.setState({})\n    //     }).catch(error => {\n    //         console.log(error)\n    //     })\n    // }\n\n    // joinCourse(courseId) {\n    //     fetch(\"/join-course/\"+courseId, {\n    //         method: 'PUT'\n    //     }).then(res => {\n    //         console.log('joinCourse result', res)\n            \n    //             res.text().then(data => {\n    //                 // this.setState({popupContent: data})\n    //                 if (res.status === 200) {\n    //                     Notification.show(data, 'success')\n    //                 } else {\n    //                     console.log('----------------------')\n    //                     Notification.show(data, 'error')\n    //                 }\n                    \n    //             })\n    //             // this.setState({showPopup: true})\n    //         // console.log('Error with status ' + res.status)\n    //     }).catch(error => {\n    //         console.error(error)\n    //     })\n    // }\n\n    // callSocket = () => {\n    //     // let sock = new SockJS('http://localhost:9997/remainingSlots');\n    //     // sock.onopen = function() {\n    //     //     console.log('open web socket');\n    //     // }\n\n    //     let eventBus = new EventBus('http://localhost:9997/remainingSlots');\n\n    //     eventBus.onopen = () => {\n    //         eventBus.registerHandler('out', (error, message) => {\n    //             // TODO - Optimize rerender\n    //             let course = JSON.parse(message.body)\n    //             let courses = [...this.state.courses]\n    //             let index = courses.findIndex(c => c.courseNumber === course.courseNumber)\n    //             courses[index] = course\n    //             this.setState({courses: courses});\n    //         });\n\n    //         eventBus.send('in', {msg: 'Hi!'})\n    //     }\n    // }\n\n}\n\nexport default  CourseRegistration","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/Header.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/InformationCard/index.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/InformationCard/InformationCard.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Button/Button.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Button/index.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/screens/Popup.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Notification/Notification.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/WebSockerHandler.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/routes/Routes.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/constants/Constants.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/InternalEventBus.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/service/Service.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":43,"column":110,"nodeType":"90","endLine":43,"endColumn":120},{"ruleId":"88","severity":1,"message":"89","line":48,"column":114,"nodeType":"90","endLine":48,"endColumn":124},{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":23},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'computerScience' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]