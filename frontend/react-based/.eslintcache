[{"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/index.js":"1","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/App.js":"2","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Login.js":"3","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/ClassRegistration.js":"4","/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/store/Store.js":"5"},{"size":182,"mtime":1610177515603,"results":"6","hashOfConfig":"7"},{"size":673,"mtime":1610281682548,"results":"8","hashOfConfig":"7"},{"size":2343,"mtime":1610448780476,"results":"9","hashOfConfig":"7"},{"size":3036,"mtime":1611041626794,"results":"10","hashOfConfig":"7"},{"size":468,"mtime":1610178702019,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"rsnv40",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/index.js",[],["24","25"],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/App.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/Login.js",["26","27"],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/components/ClassRegistration.js",[],"/home/hung/data/eclipse-workspace/student-application/frontend/react-based/src/store/Store.js",["28"],"import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from 'redux-thunk';\n\nfunction logger({ getState }) {\n    return next => action => {\n        console.log('action', action)\n        console.log('state when action is dispatched', getState());\n        const returnVal = next(action);\n        return returnVal;\n    }\n}\n\nconst rootReducers = combineReducers({\n})\n\nexport const store = () => createStore(rootReducers, applyMiddleware(thunk))",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":26,"column":110,"nodeType":"35","endLine":26,"endColumn":120},{"ruleId":"33","severity":1,"message":"34","line":31,"column":114,"nodeType":"35","endLine":31,"endColumn":124},{"ruleId":"36","severity":1,"message":"37","line":4,"column":10,"nodeType":"38","messageId":"39","endLine":4,"endColumn":16},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]